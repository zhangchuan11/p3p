<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ccit.dao.RoleMapper">
	<!-- Role的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
	<resultMap id="result_Role_Map" type="com.ccit.dml.Role">
		<id column="id" property="id" />
		<result column="Role_id" property="roleId" />
		<result column="PermissionsID" property="permissionsID" />
		<result column="PermissionsController" property="permissionsController" />
		<result column="RoleName" property="roleName" />
		<result column="Roleflag" property="roleflag" />
	</resultMap>

	<!-- assist是查询辅助工具类, ${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据查询辅助工具类,作用assist与一致 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表名为:role的列名 -->
	<sql id="role_Column">
		id,Role_id,PermissionsID,PermissionsController,RoleName,Roleflag
	</sql>

    <select id="findPermissionsID" parameterType="java.lang.String" resultType="java.lang.String">
        select PermissionsID from role r join user u on u.Role_ID = r.Role_id where u.id=#{id}
    </select>

	<!--获得类名为:Role对应的数据库表的数据总行数 -->
	<select id="getRoleRowCount" parameterType="com.common.Assist" resultType="java.lang.Long">
		select count(*) from role
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</select>
	
	<!-- 获得类名为:Role对应数据库中表的数据集合 -->
	<select id="selectRole" parameterType="com.common.Assist" resultMap="result_Role_Map">
		select
		<if test="distinct !=null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="role_Column" />
			</otherwise>
		</choose>
		from role
		<if test="require!=null">
			<include refid="assist" />
		</if>
		<if test="order !=null">${order}</if>
		<choose>
			<when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
			<when test="rowSize !=null">LIMIT #{rowSize}</when>
		</choose>
	</select>
	<!-- 通过Role的id获得对应数据库中表的数据对象 -->
	<select id="selectRoleById" parameterType="String" resultMap="result_Role_Map">
		select
		<include refid="role_Column" />
		from role
		where id = #{id}
	</select>
	
	<!-- 获得一个Role对象,以参数Role对象中不为空的属性作为条件进行查询 -->
	<select id="selectRoleObjSingle" parameterType="com.ccit.dml.Role" resultMap="result_Role_Map">
		select
		<include refid="role_Column" />
		from role
		<where>
		<if test="roleId != null"> and Role_id = #{roleId}</if>
		<if test="permissionsID != null"> and PermissionsID = #{permissionsID}</if>
		<if test="permissionsController != null"> and PermissionsController = #{permissionsController}</if>
		<if test="roleName != null"> and RoleName = #{roleName}</if>
		<if test="roleflag != null"> and Roleflag = #{roleflag}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
		LIMIT 1
	</select>
	
	<!-- 获得Role对象,以参数Role对象中不为空的属性作为条件进行查询 -->
	<select id="selectRoleByObj" parameterType="com.ccit.dml.Role" resultMap="result_Role_Map">
		select
		<include refid="role_Column" />
		from role
		<where>
		<if test="roleId != null"> and Role_id = #{roleId}</if>
		<if test="permissionsID != null"> and PermissionsID = #{permissionsID}</if>
		<if test="permissionsController != null"> and PermissionsController = #{permissionsController}</if>
		<if test="roleName != null"> and RoleName = #{roleName}</if>
		<if test="roleflag != null"> and Roleflag = #{roleflag}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
	</select>

	<!-- 将Role插入到对应数据库的表中,包括属性值为null的数据 -->
	<insert id="insertRole" parameterType="com.ccit.dml.Role">
		insert into 
		role (id,Role_id,PermissionsID,PermissionsController,RoleName,Roleflag) 
		values(#{id},#{roleId},#{permissionsID},#{permissionsController},#{roleName},#{roleflag})
	</insert>

	<!-- 将Role中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNotNullRole" parameterType="com.ccit.dml.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="roleId != null">Role_id,</if>
			<if test="permissionsID != null">PermissionsID,</if>
			<if test="permissionsController != null">PermissionsController,</if>
			<if test="roleName != null">RoleName,</if>
			<if test="roleflag != null">Roleflag,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="roleId != null">#{roleId},</if>
			<if test="permissionsID != null">#{permissionsID},</if>
			<if test="permissionsController != null">#{permissionsController},</if>
			<if test="roleName != null">#{roleName},</if>
			<if test="roleflag != null">#{roleflag},</if>
		</trim>
	</insert>

	<!-- 将Role批量插入到对应数据库的表中 -->
	<insert id="insertRoleByBatch" parameterType="ArrayList">
		insert into role(id,Role_id,PermissionsID,PermissionsController,RoleName,Roleflag) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{roleId},#{permissionsID},#{permissionsController},#{roleName},#{roleflag})
		</foreach>
	</insert>
	
	<!-- 通过Role的id将数据库表中对应的数据删除 -->
	<delete id="deleteRoleById" parameterType="String">
		delete from role
		where  id  =  #{id}
	</delete>

	<!-- 通过辅助工具Assist中的条件将Role对应的数据库表的数据删除 -->
	<delete id="deleteRoleByAssist" parameterType="com.common.Assist">
		delete from role
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</delete>
	
	<!-- 通过Role的id将Role的数据更新到数据库中对应的表,包括值null的数据 -->
	<update id="updateRoleById" parameterType="com.ccit.dml.Role"> 
		update role set
		<set>
			Role_id = #{roleId} , 
			PermissionsID = #{permissionsID} , 
			PermissionsController = #{permissionsController} , 
			RoleName = #{roleName} , 
			Roleflag = #{roleflag} , 
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过Role的id将Role中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullRoleById" parameterType="com.ccit.dml.Role">
		update role
		<set>
					<if test="roleId != null">Role_id = #{roleId},</if>
					<if test="permissionsID != null">PermissionsID = #{permissionsID},</if>
					<if test="permissionsController != null">PermissionsController = #{permissionsController},</if>
					<if test="roleName != null">RoleName = #{roleName},</if>
					<if test="roleflag != null">Roleflag = #{roleflag},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过辅助工具Assist中的条件将Role中的数据更新到数据库对应的表中,包括值为null的数据 -->
	<update id="updateRole" parameterType="map">
		update role
		<set>
			id = #{enti.id},
			Role_id = #{enti.roleId},
			PermissionsID = #{enti.permissionsID},
			PermissionsController = #{enti.permissionsController},
			RoleName = #{enti.roleName},
			Roleflag = #{enti.roleflag},
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>

	<!-- 通过辅助工具Assist中的条件将Role中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullRole" parameterType="map">
		update role
		<set>
			<if test="enti.id != null">id = #{enti.id},</if>
			<if test="enti.roleId != null">Role_id = #{enti.roleId},</if>
			<if test="enti.permissionsID != null">PermissionsID = #{enti.permissionsID},</if>
			<if test="enti.permissionsController != null">PermissionsController = #{enti.permissionsController},</if>
			<if test="enti.roleName != null">RoleName = #{enti.roleName},</if>
			<if test="enti.roleflag != null">Roleflag = #{enti.roleflag},</if>
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>
</mapper>