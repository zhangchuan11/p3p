<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ccit.dao.CreditgradeMapper">
	<!-- Creditgrade的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
	<resultMap id="result_Creditgrade_Map" type="com.ccit.dml.Creditgrade">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="integral" property="integral" />
		<result column="LoanAmounts" property="loanAmounts" />
	</resultMap>

	<!-- assist是查询辅助工具类, ${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据查询辅助工具类,作用assist与一致 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表名为:creditgrade的列名 -->
	<sql id="creditgrade_Column">
		id,name,integral,LoanAmounts
	</sql>

	<!--获得类名为:Creditgrade对应的数据库表的数据总行数 -->
	<select id="getCreditgradeRowCount" parameterType="com.common.Assist" resultType="java.lang.Long">
		select count(*) from creditgrade
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</select>
	
	<!-- 获得类名为:Creditgrade对应数据库中表的数据集合 -->
	<select id="selectCreditgrade" parameterType="com.common.Assist" resultMap="result_Creditgrade_Map">
		select
		<if test="distinct !=null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="creditgrade_Column" />
			</otherwise>
		</choose>
		from creditgrade
		<if test="require!=null">
			<include refid="assist" />
		</if>
		<if test="order !=null">${order}</if>
		<choose>
			<when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
			<when test="rowSize !=null">LIMIT #{rowSize}</when>
		</choose>
	</select>
	<!-- 通过Creditgrade的id获得对应数据库中表的数据对象 -->
	<select id="selectCreditgradeById" parameterType="String" resultMap="result_Creditgrade_Map">
		select
		<include refid="creditgrade_Column" />
		from creditgrade
		where id = #{id}
	</select>
	
	<!-- 获得一个Creditgrade对象,以参数Creditgrade对象中不为空的属性作为条件进行查询 -->
	<select id="selectCreditgradeObjSingle" parameterType="com.ccit.dml.Creditgrade" resultMap="result_Creditgrade_Map">
		select
		<include refid="creditgrade_Column" />
		from creditgrade
		<where>
		<if test="name != null"> and name = #{name}</if>
		<if test="integral != null"> and integral = #{integral}</if>
		<if test="loanAmounts != null"> and LoanAmounts = #{loanAmounts}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
		LIMIT 1
	</select>
	
	<!-- 获得Creditgrade对象,以参数Creditgrade对象中不为空的属性作为条件进行查询 -->
	<select id="selectCreditgradeByObj" parameterType="com.ccit.dml.Creditgrade" resultMap="result_Creditgrade_Map">
		select
		<include refid="creditgrade_Column" />
		from creditgrade
		<where>
		<if test="name != null"> and name = #{name}</if>
		<if test="integral != null"> and integral = #{integral}</if>
		<if test="loanAmounts != null"> and LoanAmounts = #{loanAmounts}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
	</select>

	<!-- 将Creditgrade插入到对应数据库的表中,包括属性值为null的数据 -->
	<insert id="insertCreditgrade" parameterType="com.ccit.dml.Creditgrade">
		insert into 
		creditgrade (id,name,integral,LoanAmounts) 
		values(#{id},#{name},#{integral},#{loanAmounts})
	</insert>

	<!-- 将Creditgrade中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNotNullCreditgrade" parameterType="com.ccit.dml.Creditgrade">
		insert into creditgrade
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="name != null">name,</if>
			<if test="integral != null">integral,</if>
			<if test="loanAmounts != null">LoanAmounts,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="name != null">#{name},</if>
			<if test="integral != null">#{integral},</if>
			<if test="loanAmounts != null">#{loanAmounts},</if>
		</trim>
	</insert>

	<!-- 将Creditgrade批量插入到对应数据库的表中 -->
	<insert id="insertCreditgradeByBatch" parameterType="ArrayList">
		insert into creditgrade(id,name,integral,LoanAmounts) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{name},#{integral},#{loanAmounts})
		</foreach>
	</insert>
	
	<!-- 通过Creditgrade的id将数据库表中对应的数据删除 -->
	<delete id="deleteCreditgradeById" parameterType="String">
		delete from creditgrade
		where  id  =  #{id}
	</delete>

	<!-- 通过辅助工具Assist中的条件将Creditgrade对应的数据库表的数据删除 -->
	<delete id="deleteCreditgradeByAssist" parameterType="com.common.Assist">
		delete from creditgrade
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</delete>
	
	<!-- 通过Creditgrade的id将Creditgrade的数据更新到数据库中对应的表,包括值null的数据 -->
	<update id="updateCreditgradeById" parameterType="com.ccit.dml.Creditgrade"> 
		update creditgrade set
		<set>
			name = #{name} , 
			integral = #{integral} , 
			LoanAmounts = #{loanAmounts} , 
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过Creditgrade的id将Creditgrade中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullCreditgradeById" parameterType="com.ccit.dml.Creditgrade">
		update creditgrade
		<set>
					<if test="name != null">name = #{name},</if>
					<if test="integral != null">integral = #{integral},</if>
					<if test="loanAmounts != null">LoanAmounts = #{loanAmounts},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过辅助工具Assist中的条件将Creditgrade中的数据更新到数据库对应的表中,包括值为null的数据 -->
	<update id="updateCreditgrade" parameterType="map">
		update creditgrade
		<set>
			id = #{enti.id},
			name = #{enti.name},
			integral = #{enti.integral},
			LoanAmounts = #{enti.loanAmounts},
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>

	<!-- 通过辅助工具Assist中的条件将Creditgrade中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullCreditgrade" parameterType="map">
		update creditgrade
		<set>
			<if test="enti.id != null">id = #{enti.id},</if>
			<if test="enti.name != null">name = #{enti.name},</if>
			<if test="enti.integral != null">integral = #{enti.integral},</if>
			<if test="enti.loanAmounts != null">LoanAmounts = #{enti.loanAmounts},</if>
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>
</mapper>