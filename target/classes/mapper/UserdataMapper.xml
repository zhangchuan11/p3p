<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ccit.dao.UserdataMapper">
	<!-- Userdata的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
	<resultMap id="result_Userdata_Map" type="com.ccit.dml.Userdata">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="PhoneNumber" property="phoneNumber" />
		<result column="IdNumber" property="idNumber" />
		<result column="Address" property="address" />
		<result column="BankCard" property="bankCard" />
		<result column="CreditIntegral" property="creditIntegral" />
		<result column="CreditGrade" property="creditGrade" />
	</resultMap>

	<!-- assist是查询辅助工具类, ${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据查询辅助工具类,作用assist与一致 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表名为:userdata的列名 -->
	<sql id="userdata_Column">
		id,name,PhoneNumber,IdNumber,Address,BankCard,CreditIntegral,CreditGrade
	</sql>

	<!--获得类名为:Userdata对应的数据库表的数据总行数 -->
	<select id="getUserdataRowCount" parameterType="com.common.Assist" resultType="java.lang.Long">
		select count(*) from userdata
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</select>
	
	<!-- 获得类名为:Userdata对应数据库中表的数据集合 -->
	<select id="selectUserdata" parameterType="com.common.Assist" resultMap="result_Userdata_Map">
		select
		<if test="distinct !=null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="userdata_Column" />
			</otherwise>
		</choose>
		from userdata
		<if test="require!=null">
			<include refid="assist" />
		</if>
		<if test="order !=null">${order}</if>
		<choose>
			<when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
			<when test="rowSize !=null">LIMIT #{rowSize}</when>
		</choose>
	</select>
	<!-- 通过Userdata的id获得对应数据库中表的数据对象 -->
	<select id="selectUserdataById" parameterType="String" resultMap="result_Userdata_Map">
		select
		<include refid="userdata_Column" />
		from userdata
		where id = #{id}
	</select>
	
	<!-- 获得一个Userdata对象,以参数Userdata对象中不为空的属性作为条件进行查询 -->
	<select id="selectUserdataObjSingle" parameterType="com.ccit.dml.Userdata" resultMap="result_Userdata_Map">
		select
		<include refid="userdata_Column" />
		from userdata
		<where>
		<if test="name != null"> and name = #{name}</if>
		<if test="phoneNumber != null"> and PhoneNumber = #{phoneNumber}</if>
		<if test="idNumber != null"> and IdNumber = #{idNumber}</if>
		<if test="address != null"> and Address = #{address}</if>
		<if test="bankCard != null"> and BankCard = #{bankCard}</if>
		<if test="creditIntegral != null"> and CreditIntegral = #{creditIntegral}</if>
		<if test="creditGrade != null"> and CreditGrade = #{creditGrade}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
		LIMIT 1
	</select>
	
	<!-- 获得Userdata对象,以参数Userdata对象中不为空的属性作为条件进行查询 -->
	<select id="selectUserdataByObj" parameterType="com.ccit.dml.Userdata" resultMap="result_Userdata_Map">
		select
		<include refid="userdata_Column" />
		from userdata
		<where>
		<if test="name != null"> and name = #{name}</if>
		<if test="phoneNumber != null"> and PhoneNumber = #{phoneNumber}</if>
		<if test="idNumber != null"> and IdNumber = #{idNumber}</if>
		<if test="address != null"> and Address = #{address}</if>
		<if test="bankCard != null"> and BankCard = #{bankCard}</if>
		<if test="creditIntegral != null"> and CreditIntegral = #{creditIntegral}</if>
		<if test="creditGrade != null"> and CreditGrade = #{creditGrade}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
	</select>

	<!-- 将Userdata插入到对应数据库的表中,包括属性值为null的数据 -->
	<insert id="insertUserdata" parameterType="com.ccit.dml.Userdata">
		insert into 
		userdata (id,name,PhoneNumber,IdNumber,Address,BankCard,CreditIntegral,CreditGrade) 
		values(#{id},#{name},#{phoneNumber},#{idNumber},#{address},#{bankCard},#{creditIntegral},#{creditGrade})
	</insert>

	<!-- 将Userdata中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNotNullUserdata" parameterType="com.ccit.dml.Userdata">
		insert into userdata
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="name != null">name,</if>
			<if test="phoneNumber != null">PhoneNumber,</if>
			<if test="idNumber != null">IdNumber,</if>
			<if test="address != null">Address,</if>
			<if test="bankCard != null">BankCard,</if>
			<if test="creditIntegral != null">CreditIntegral,</if>
			<if test="creditGrade != null">CreditGrade,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="name != null">#{name},</if>
			<if test="phoneNumber != null">#{phoneNumber},</if>
			<if test="idNumber != null">#{idNumber},</if>
			<if test="address != null">#{address},</if>
			<if test="bankCard != null">#{bankCard},</if>
			<if test="creditIntegral != null">#{creditIntegral},</if>
			<if test="creditGrade != null">#{creditGrade},</if>
		</trim>
	</insert>

	<!-- 将Userdata批量插入到对应数据库的表中 -->
	<insert id="insertUserdataByBatch" parameterType="ArrayList">
		insert into userdata(id,name,PhoneNumber,IdNumber,Address,BankCard,CreditIntegral,CreditGrade) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{name},#{phoneNumber},#{idNumber},#{address},#{bankCard},#{creditIntegral},#{creditGrade})
		</foreach>
	</insert>
	
	<!-- 通过Userdata的id将数据库表中对应的数据删除 -->
	<delete id="deleteUserdataById" parameterType="String">
		delete from userdata
		where  id  =  #{id}
	</delete>

	<!-- 通过辅助工具Assist中的条件将Userdata对应的数据库表的数据删除 -->
	<delete id="deleteUserdataByAssist" parameterType="com.common.Assist">
		delete from userdata
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</delete>
	
	<!-- 通过Userdata的id将Userdata的数据更新到数据库中对应的表,包括值null的数据 -->
	<update id="updateUserdataById" parameterType="com.ccit.dml.Userdata"> 
		update userdata set
		<set>
			name = #{name} , 
			PhoneNumber = #{phoneNumber} , 
			IdNumber = #{idNumber} , 
			Address = #{address} , 
			BankCard = #{bankCard} , 
			CreditIntegral = #{creditIntegral} , 
			CreditGrade = #{creditGrade} , 
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过Userdata的id将Userdata中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullUserdataById" parameterType="com.ccit.dml.Userdata">
		update userdata
		<set>
					<if test="name != null">name = #{name},</if>
					<if test="phoneNumber != null">PhoneNumber = #{phoneNumber},</if>
					<if test="idNumber != null">IdNumber = #{idNumber},</if>
					<if test="address != null">Address = #{address},</if>
					<if test="bankCard != null">BankCard = #{bankCard},</if>
					<if test="creditIntegral != null">CreditIntegral = #{creditIntegral},</if>
					<if test="creditGrade != null">CreditGrade = #{creditGrade},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过辅助工具Assist中的条件将Userdata中的数据更新到数据库对应的表中,包括值为null的数据 -->
	<update id="updateUserdata" parameterType="map">
		update userdata
		<set>
			id = #{enti.id},
			name = #{enti.name},
			PhoneNumber = #{enti.phoneNumber},
			IdNumber = #{enti.idNumber},
			Address = #{enti.address},
			BankCard = #{enti.bankCard},
			CreditIntegral = #{enti.creditIntegral},
			CreditGrade = #{enti.creditGrade},
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>

	<!-- 通过辅助工具Assist中的条件将Userdata中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullUserdata" parameterType="map">
		update userdata
		<set>
			<if test="enti.id != null">id = #{enti.id},</if>
			<if test="enti.name != null">name = #{enti.name},</if>
			<if test="enti.phoneNumber != null">PhoneNumber = #{enti.phoneNumber},</if>
			<if test="enti.idNumber != null">IdNumber = #{enti.idNumber},</if>
			<if test="enti.address != null">Address = #{enti.address},</if>
			<if test="enti.bankCard != null">BankCard = #{enti.bankCard},</if>
			<if test="enti.creditIntegral != null">CreditIntegral = #{enti.creditIntegral},</if>
			<if test="enti.creditGrade != null">CreditGrade = #{enti.creditGrade},</if>
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>
</mapper>