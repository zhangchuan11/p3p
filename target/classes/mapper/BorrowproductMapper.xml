<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ccit.dao.BorrowproductMapper">
	<!-- Borrowproduct的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
	<resultMap id="result_Borrowproduct_Map" type="com.ccit.dml.Borrowproduct">
		<id column="id" property="id" />
		<result column="Type" property="type" />
		<result column="Deadline" property="deadline" />
		<result column="Conditio" property="conditio" />
		<result column="Reta" property="reta" />
	</resultMap>

	<!-- assist是查询辅助工具类, ${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据查询辅助工具类,作用assist与一致 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表名为:borrowproduct的列名 -->
	<sql id="borrowproduct_Column">
		id,Type,Deadline,Conditio,Reta
	</sql>

	<!--获得类名为:Borrowproduct对应的数据库表的数据总行数 -->
	<select id="getBorrowproductRowCount" parameterType="com.common.Assist" resultType="java.lang.Long">
		select count(*) from borrowproduct
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</select>
	
	<!-- 获得类名为:Borrowproduct对应数据库中表的数据集合 -->
	<select id="selectBorrowproduct" parameterType="com.common.Assist" resultMap="result_Borrowproduct_Map">
		select
		<if test="distinct !=null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="borrowproduct_Column" />
			</otherwise>
		</choose>
		from borrowproduct
		<if test="require!=null">
			<include refid="assist" />
		</if>
		<if test="order !=null">${order}</if>
		<choose>
			<when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
			<when test="rowSize !=null">LIMIT #{rowSize}</when>
		</choose>
	</select>
	<!-- 通过Borrowproduct的id获得对应数据库中表的数据对象 -->
	<select id="selectBorrowproductById" parameterType="String" resultMap="result_Borrowproduct_Map">
		select
		<include refid="borrowproduct_Column" />
		from borrowproduct
		where id = #{id}
	</select>
	
	<!-- 获得一个Borrowproduct对象,以参数Borrowproduct对象中不为空的属性作为条件进行查询 -->
	<select id="selectBorrowproductObjSingle" parameterType="com.ccit.dml.Borrowproduct" resultMap="result_Borrowproduct_Map">
		select
		<include refid="borrowproduct_Column" />
		from borrowproduct
		<where>
		<if test="type != null"> and Type = #{type}</if>
		<if test="deadline != null"> and Deadline = #{deadline}</if>
		<if test="conditio != null"> and Conditio = #{conditio}</if>
		<if test="reta != null"> and Reta = #{reta}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
		LIMIT 1
	</select>
	
	<!-- 获得Borrowproduct对象,以参数Borrowproduct对象中不为空的属性作为条件进行查询 -->
	<select id="selectBorrowproductByObj" parameterType="com.ccit.dml.Borrowproduct" resultMap="result_Borrowproduct_Map">
		select
		<include refid="borrowproduct_Column" />
		from borrowproduct
		<where>
		<if test="type != null"> and Type = #{type}</if>
		<if test="deadline != null"> and Deadline = #{deadline}</if>
		<if test="conditio != null"> and Conditio = #{conditio}</if>
		<if test="reta != null"> and Reta = #{reta}</if>
		<if test="id != null"> and id = #{id} </if>
		</where>
	</select>

	<!-- 将Borrowproduct插入到对应数据库的表中,包括属性值为null的数据 -->
	<insert id="insertBorrowproduct" parameterType="com.ccit.dml.Borrowproduct">
		insert into 
		borrowproduct (id,Type,Deadline,Conditio,Reta) 
		values(#{id},#{type},#{deadline},#{conditio},#{reta})
	</insert>

	<!-- 将Borrowproduct中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNotNullBorrowproduct" parameterType="com.ccit.dml.Borrowproduct">
		insert into borrowproduct
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="type != null">Type,</if>
			<if test="deadline != null">Deadline,</if>
			<if test="conditio != null">Conditio,</if>
			<if test="reta != null">Reta,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="type != null">#{type},</if>
			<if test="deadline != null">#{deadline},</if>
			<if test="conditio != null">#{conditio},</if>
			<if test="reta != null">#{reta},</if>
		</trim>
	</insert>

	<!-- 将Borrowproduct批量插入到对应数据库的表中 -->
	<insert id="insertBorrowproductByBatch" parameterType="ArrayList">
		insert into borrowproduct(id,Type,Deadline,Conditio,Reta) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{id},#{type},#{deadline},#{conditio},#{reta})
		</foreach>
	</insert>
	
	<!-- 通过Borrowproduct的id将数据库表中对应的数据删除 -->
	<delete id="deleteBorrowproductById" parameterType="String">
		delete from borrowproduct
		where  id  =  #{id}
	</delete>

	<!-- 通过辅助工具Assist中的条件将Borrowproduct对应的数据库表的数据删除 -->
	<delete id="deleteBorrowproductByAssist" parameterType="com.common.Assist">
		delete from borrowproduct
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</delete>
	
	<!-- 通过Borrowproduct的id将Borrowproduct的数据更新到数据库中对应的表,包括值null的数据 -->
	<update id="updateBorrowproductById" parameterType="com.ccit.dml.Borrowproduct"> 
		update borrowproduct set
		<set>
			Type = #{type} , 
			Deadline = #{deadline} , 
			Conditio = #{conditio} , 
			Reta = #{reta} , 
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过Borrowproduct的id将Borrowproduct中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullBorrowproductById" parameterType="com.ccit.dml.Borrowproduct">
		update borrowproduct
		<set>
					<if test="type != null">Type = #{type},</if>
					<if test="deadline != null">Deadline = #{deadline},</if>
					<if test="conditio != null">Conditio = #{conditio},</if>
					<if test="reta != null">Reta = #{reta},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 通过辅助工具Assist中的条件将Borrowproduct中的数据更新到数据库对应的表中,包括值为null的数据 -->
	<update id="updateBorrowproduct" parameterType="map">
		update borrowproduct
		<set>
			id = #{enti.id},
			Type = #{enti.type},
			Deadline = #{enti.deadline},
			Conditio = #{enti.conditio},
			Reta = #{enti.reta},
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>

	<!-- 通过辅助工具Assist中的条件将Borrowproduct中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNotNullBorrowproduct" parameterType="map">
		update borrowproduct
		<set>
			<if test="enti.id != null">id = #{enti.id},</if>
			<if test="enti.type != null">Type = #{enti.type},</if>
			<if test="enti.deadline != null">Deadline = #{enti.deadline},</if>
			<if test="enti.conditio != null">Conditio = #{enti.conditio},</if>
			<if test="enti.reta != null">Reta = #{enti.reta},</if>
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>
</mapper>